/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game;

import java.util.Random;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author horimo
 */
public class gameGreedy extends javax.swing.JFrame {

//    String kartu[] = {
//        "2", "2", "2", "2",
//        "3", "3", "3", "3",
//        "4", "4", "4", "4",
//        "5", "5", "5", "5",
//        "6", "6", "6", "6",
//        "7", "7", "7", "7",
//        "8", "8", "8", "8",
//        "9", "9", "9", "9",
//        "10", "10", "10", "10",
//        "J", "J", "J", "J",
//        "Q", "Q", "Q", "Q",
//        "K", "K", "K", "K",
//        "A", "A", "A", "A"
//    };
    int kartu[] = {
        1, 1, 1, 1,
        2, 2, 2, 2,
        3, 3, 3, 3,
        4, 4, 4, 4,
        5, 5, 5, 5,
        6, 6, 6, 6,
        7, 7, 7, 7,
        8, 8, 8, 8,
        9, 9, 9, 9,
        10, 10, 10, 10,
        10, 10, 10, 10,
        10, 10, 10, 10,
        10, 10, 10, 10,};

    int bandar[] = {20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};

    int uang = 100000;

    /**
     * Creates new form gameGreedy
     */
    public gameGreedy() {
        initComponents();

        hit.setEnabled(false);
        stand.setEnabled(false);
        if (uang == 0) {
            allin.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hit = new javax.swing.JButton();
        stand = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        dealer = new javax.swing.JLabel();
        money = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        allin = new javax.swing.JButton();
        bet = new javax.swing.JButton();
        setbet = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mybet = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hit.setText("AMBIL");
        hit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitActionPerformed(evt);
            }
        });

        stand.setText("BERHENTI");
        stand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standActionPerformed(evt);
            }
        });

        jLabel1.setText("Kartu:");

        text.setEditable(false);
        text.setColumns(20);
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        jLabel2.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel2.setText("SANGGONG");

        jLabel3.setText("Total: ");

        jLabel4.setText("Bandar");

        total.setText("-");

        dealer.setText(" ? ");

        money.setText("100000");

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Bet")), "Taruhan"));

        allin.setFont(new java.awt.Font("Noto Sans UI", 0, 10)); // NOI18N
        allin.setText("SEMUA");
        allin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allinActionPerformed(evt);
            }
        });

        bet.setFont(new java.awt.Font("Noto Sans UI", 0, 10)); // NOI18N
        bet.setText("PASANG");
        bet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(allin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(bet, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(setbet, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setbet)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(allin, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bet, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(setbet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allin)
                    .addComponent(bet))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel6.setText("Uang ");

        jLabel7.setText("Rp.");

        jLabel5.setText("Taruhan");

        jLabel8.setText("Rp.");

        mybet.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stand, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2)
                                .addComponent(total)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mybet, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(money, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(dealer))
                                    .addComponent(jLabel4))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dealer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mybet)
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(total)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(money)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hit)
                            .addComponent(stand)))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitActionPerformed

        JDialog.setDefaultLookAndFeelDecorated(true);
        int response = JOptionPane.showConfirmDialog(rootPane, "Ambil kartu?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.NO_OPTION) {
            System.out.println("No button clicked");
        } else if (response == JOptionPane.YES_OPTION) {

            int ambil = new Random().nextInt(kartu.length);
            JOptionPane.showMessageDialog(rootPane, "Kartu " + kartu[ambil] + " telah ditambahkan");
            text.append(String.valueOf(kartu[ambil] + ", "));

            int newtotalawal = (Integer.parseInt(total.getText()));
            int ambilakhir = kartu[ambil];
            int totalakhir = newtotalawal + ambilakhir;
            total.setText(String.valueOf(totalakhir));

            if (totalakhir > 30) {

//                uang = uang - Integer.parseInt(mybet.getText());
                JOptionPane.showMessageDialog(rootPane, "Kamu kalah, kamu kehilangan uang Rp. " + mybet.getText());
                System.out.println(uang);

                total.setText("-");
                text.setText("");
                hit.setEnabled(false);
                stand.setEnabled(false);

                mybet.setText("-");
                allin.setEnabled(true);
                bet.setEnabled(true);
                setbet.setEnabled(true);

            } else if (totalakhir == 30) {
                int newmoney = Integer.parseInt(money.getText()) + (Integer.parseInt(mybet.getText()) * 3);
                uang = newmoney;

                JOptionPane.showMessageDialog(rootPane, "SANGGONG!\nKamu mendapatkan Rp. " + Integer.parseInt(mybet.getText()) * 3);
                money.setText(String.valueOf(uang));
                System.out.println(uang);

                total.setText("-");
                text.setText("");
                hit.setEnabled(false);
                stand.setEnabled(false);

                mybet.setText("-");
                allin.setEnabled(true);
                bet.setEnabled(true);
                setbet.setEnabled(true);
            }

        } else if (response == JOptionPane.CLOSED_OPTION) {
            System.out.println("JOptionPane closed");
        }
    }//GEN-LAST:event_hitActionPerformed

    private void betActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_betActionPerformed

        try {
            int uangawal = uang;
            int taruhan = Integer.parseInt(setbet.getText());
            if (taruhan < 0 || taruhan == 0) {
                JOptionPane.showMessageDialog(rootPane, "Tidak valid");
            } else if (taruhan > uangawal) {
                JOptionPane.showMessageDialog(rootPane, "Uang tidak cukup!");
            } else if (taruhan < 5000) {
                JOptionPane.showMessageDialog(rootPane, "Minimal Rp. 5000");
            } else {
                uang = uangawal - taruhan;
                money.setText(String.valueOf(uang));
                mybet.setText(setbet.getText());

                allin.setEnabled(false);
                bet.setEnabled(false);
                setbet.setEnabled(false);
                hit.setEnabled(true);
                stand.setEnabled(true);

                int kartu1 = new Random().nextInt(kartu.length);
                int kartu2 = new Random().nextInt(kartu.length);
                int kartu3 = new Random().nextInt(kartu.length);
                text.append(String.valueOf(kartu[kartu1] + ", "));
                text.append(String.valueOf(kartu[kartu2] + ", "));
                text.append(String.valueOf(kartu[kartu3] + ", "));
                int totalawal = kartu[kartu1] + kartu[kartu2] + kartu[kartu3];
                total.setText(String.valueOf(totalawal));
                System.out.println(uang);
                if (totalawal == 30) {
                    int newmoney = Integer.parseInt(money.getText()) + (Integer.parseInt(mybet.getText()) * 3);
                    uang = newmoney;

                    JOptionPane.showMessageDialog(rootPane, "SANGGONG!\nKamu mendapatkan Rp. " + Integer.parseInt(mybet.getText()) * 3);
                    money.setText(String.valueOf(uang));
                    System.out.println(uang);

                    dealer.setText(" ? ");
                    total.setText("-");
                    text.setText("");
                    hit.setEnabled(false);
                    stand.setEnabled(false);

                    mybet.setText("-");
                    allin.setEnabled(true);
                    bet.setEnabled(true);
                    setbet.setEnabled(true);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Tidak boleh kosong", "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_betActionPerformed

    private void standActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standActionPerformed
        int response = JOptionPane.showConfirmDialog(rootPane, "Yakin?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.NO_OPTION) {
            System.out.println("No button clicked");
        } else if (response == JOptionPane.YES_OPTION) {

            int random = new Random().nextInt(bandar.length);
            int kartudealer = bandar[random];
            dealer.setText(String.valueOf(kartudealer));

            if (kartudealer < Integer.parseInt(total.getText())) {
                int newmoney = Integer.parseInt(money.getText()) + (Integer.parseInt(mybet.getText()) * 2);
                uang = newmoney;

                JOptionPane.showMessageDialog(rootPane, "MENANG!\nKamu mendapatkan Rp. " + Integer.parseInt(mybet.getText()) * 2);
                money.setText(String.valueOf(uang));
                System.out.println(uang);

                dealer.setText(" ? ");
                total.setText("-");
                text.setText("");
                hit.setEnabled(false);
                stand.setEnabled(false);

                mybet.setText("-");
                allin.setEnabled(true);
                bet.setEnabled(true);
                setbet.setEnabled(true);
            } else if (kartudealer > Integer.parseInt(total.getText())) {
//                uang = uang - Integer.parseInt(mybet.getText());
                JOptionPane.showMessageDialog(rootPane, "KALAH!\nKamu kehilangan uang Rp. " + mybet.getText());
                System.out.println(uang);

                dealer.setText(" ? ");
                total.setText("-");
                text.setText("");
                hit.setEnabled(false);
                stand.setEnabled(false);

                mybet.setText("-");
                allin.setEnabled(true);
                bet.setEnabled(true);
                setbet.setEnabled(true);
            } else if (kartudealer == Integer.parseInt(total.getText())) {

                int newmoney = Integer.parseInt(money.getText()) + Integer.parseInt(mybet.getText());
                uang = newmoney;
                money.setText(String.valueOf(uang));
                JOptionPane.showMessageDialog(rootPane, "DRAW!\nModal dikembalikan sebanyak Rp. " + mybet.getText());
                System.out.println(uang);

                dealer.setText(" ? ");
                total.setText("-");
                text.setText("");
                hit.setEnabled(false);
                stand.setEnabled(false);

                mybet.setText("-");
                allin.setEnabled(true);
                bet.setEnabled(true);
                setbet.setEnabled(true);
            }
        } else if (response == JOptionPane.CLOSED_OPTION) {
            System.out.println("JOptionPane closed");
        }
    }//GEN-LAST:event_standActionPerformed

    private void allinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allinActionPerformed
        int response = JOptionPane.showConfirmDialog(rootPane, "Pasang semua?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.NO_OPTION) {
            System.out.println("No button clicked");
        } else if (response == JOptionPane.YES_OPTION) {

            setbet.setText(String.valueOf(Integer.parseInt(money.getText())));
            money.setText("0");
            allin.setEnabled(false);

        } else if (response == JOptionPane.CLOSED_OPTION) {
            System.out.println("JOptionPane closed");
        }


    }//GEN-LAST:event_allinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gameGreedy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gameGreedy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gameGreedy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gameGreedy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gameGreedy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allin;
    private javax.swing.JButton bet;
    private javax.swing.JLabel dealer;
    private javax.swing.JButton hit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel money;
    private javax.swing.JLabel mybet;
    private javax.swing.JTextField setbet;
    private javax.swing.JButton stand;
    private javax.swing.JTextArea text;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
